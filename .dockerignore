.git/
**/*.env
**/*.csv

# Created by https://www.toptal.com/developers/gitignore/api/go,node,yarn,svelte
# Edit at https://www.toptal.com/developers/gitignore?templates=go,node,yarn,svelte

### Go ###
# If you prefer the allow list template instead of the deny list, see community template:
# https://github.com/github/gitignore/blob/main/community/Golang/Go.AllowList.gitignore
#
# Binaries for programs and plugins
**/*.exe
**/*.exe~
**/*.dll
**/*.so
**/*.dylib

# Test binary, built with `go test -c`
**/*.test

# Output of the go coverage tool, specifically when used with LiteIDE
**/*.out

# Dependency directories (remove the comment below to include it)
# vendor/

# Go workspace file
**/go.work

### Node ###
# Logs
**/logs
**/*.log
**/npm-debug.log*
**/yarn-debug.log*
**/yarn-error.log*
**/lerna-debug.log*
**/.pnpm-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
**/report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
**/pids
**/*.pid
**/*.seed
**/*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
**/lib-cov

# Coverage directory used by tools like istanbul
**/coverage
**/*.lcov

# nyc test coverage
**/.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
**/.grunt

# Bower dependency directory (https://bower.io/)
**/bower_components

# node-waf configuration
**/.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
**/build/Release

# Dependency directories
**/node_modules/
**/jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
**/web_modules/

# TypeScript cache
**/*.tsbuildinfo

# Optional npm cache directory
**/.npm

# Optional eslint cache
**/.eslintcache

# Optional stylelint cache
**/.stylelintcache

# Microbundle cache
**/.rpt2_cache/
**/.rts2_cache_cjs/
**/.rts2_cache_es/
**/.rts2_cache_umd/

# Optional REPL history
**/.node_repl_history

# Output of 'npm pack'
**/*.tgz

# Yarn Integrity file
**/.yarn-integrity

# dotenv environment variable files
**/.env
**/.env.development.local
**/.env.test.local
**/.env.production.local
**/.env.local

# parcel-bundler cache (https://parceljs.org/)
**/.cache
**/.parcel-cache

# Next.js build output
**/.next
**/out

# Nuxt.js build / generate output
**/.nuxt
**/dist

# Gatsby files
**/.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
**/.vuepress/dist

# vuepress v2.x temp and cache directory
**/.temp

# Docusaurus cache and generated files
**/.docusaurus

# Serverless directories
**/.serverless/

# FuseBox cache
**/.fusebox/

# DynamoDB Local files
**/.dynamodb/

# TernJS port file
**/.tern-port

# Stores VSCode versions used for testing VSCode extensions
**/.vscode-test

# yarn v2
**/.yarn/cache
**/.yarn/unplugged
**/.yarn/build-state.yml
**/.yarn/install-state.gz
**/.pnp.*

### Node Patch ###
# Serverless Webpack directories
**/.webpack/

# Optional stylelint cache

# SvelteKit build / generate output
**/.svelte-kit

### Svelte ###
# gitignore template for the SvelteKit, frontend web component framework
# website: https://kit.svelte.dev/

**/.svelte-kit/
**/package

### yarn ###
# https://yarnpkg.com/getting-started/qa#which-files-should-be-gitignored

**/.yarn/*
!**/.yarn/releases
!**/.yarn/patches
!**/.yarn/plugins
!**/.yarn/sdks
!**/.yarn/versions

# if you are NOT using Zero-installs, then:
# comment the following lines
!**/.yarn/cache

# and uncomment the following lines
# .pnp.*

# End of https://www.toptal.com/developers/gitignore/api/go,node,yarn,svelte
# From infrastructure/.gitignore
# Created by https://www.toptal.com/developers/gitignore/api/terraform
# Edit at https://www.toptal.com/developers/gitignore?templates=terraform

### Terraform ###
# Local .terraform directories
infrastructure/**/**/.terraform/*

# .tfstate files
infrastructure/**/*.tfstate
infrastructure/**/*.tfstate.*

# Crash log files
infrastructure/**/crash.log
infrastructure/**/crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
infrastructure/**/*.tfvars
infrastructure/**/*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
infrastructure/**/override.tf
infrastructure/**/override.tf.json
infrastructure/**/*_override.tf
infrastructure/**/*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
infrastructure/**/.terraformrc
infrastructure/**/terraform.rc

# End of https://www.toptal.com/developers/gitignore/api/terraform
# From packages/apps/api/.gitignore
packages/apps/api/**/.env
packages/apps/api/**/*.json
packages/apps/api/**/*.sql

# Created by https://www.toptal.com/developers/gitignore/api/go
# Edit at https://www.toptal.com/developers/gitignore?templates=go

### Go ###
# If you prefer the allow list template instead of the deny list, see community template:
# https://github.com/github/gitignore/blob/main/community/Golang/Go.AllowList.gitignore
#
# Binaries for programs and plugins
packages/apps/api/**/*.exe
packages/apps/api/**/*.exe~
packages/apps/api/**/*.dll
packages/apps/api/**/*.so
packages/apps/api/**/*.dylib

# Test binary, built with `go test -c`
packages/apps/api/**/*.test

# Output of the go coverage tool, specifically when used with LiteIDE
packages/apps/api/**/*.out

# Dependency directories (remove the comment below to include it)
# vendor/

# Go workspace file
packages/apps/api/**/go.work

# End of https://www.toptal.com/developers/gitignore/api/go
# From packages/apps/drivers_downloader/.gitignore
packages/apps/drivers_downloader/**/.env
packages/apps/drivers_downloader/**/*.json
packages/apps/drivers_downloader/**/*.sql

# Created by https://www.toptal.com/developers/gitignore/api/go
# Edit at https://www.toptal.com/developers/gitignore?templates=go

### Go ###
# If you prefer the allow list template instead of the deny list, see community template:
# https://github.com/github/gitignore/blob/main/community/Golang/Go.AllowList.gitignore
#
# Binaries for programs and plugins
packages/apps/drivers_downloader/**/*.exe
packages/apps/drivers_downloader/**/*.exe~
packages/apps/drivers_downloader/**/*.dll
packages/apps/drivers_downloader/**/*.so
packages/apps/drivers_downloader/**/*.dylib

# Test binary, built with `go test -c`
packages/apps/drivers_downloader/**/*.test

# Output of the go coverage tool, specifically when used with LiteIDE
packages/apps/drivers_downloader/**/*.out

# Dependency directories (remove the comment below to include it)
# vendor/

# Go workspace file
packages/apps/drivers_downloader/**/go.work

# End of https://www.toptal.com/developers/gitignore/api/go
# From packages/apps/leagues_parser/.gitignore
packages/apps/leagues_parser/**/.env
packages/apps/leagues_parser/**/*.json
packages/apps/leagues_parser/**/*.sql

# Created by https://www.toptal.com/developers/gitignore/api/go
# Edit at https://www.toptal.com/developers/gitignore?templates=go

### Go ###
# If you prefer the allow list template instead of the deny list, see community template:
# https://github.com/github/gitignore/blob/main/community/Golang/Go.AllowList.gitignore
#
# Binaries for programs and plugins
packages/apps/leagues_parser/**/*.exe
packages/apps/leagues_parser/**/*.exe~
packages/apps/leagues_parser/**/*.dll
packages/apps/leagues_parser/**/*.so
packages/apps/leagues_parser/**/*.dylib

# Test binary, built with `go test -c`
packages/apps/leagues_parser/**/*.test

# Output of the go coverage tool, specifically when used with LiteIDE
packages/apps/leagues_parser/**/*.out

# Dependency directories (remove the comment below to include it)
# vendor/

# Go workspace file
packages/apps/leagues_parser/**/go.work

# End of https://www.toptal.com/developers/gitignore/api/go
# From packages/apps/qualify_results/.gitignore
packages/apps/qualify_results/**/node_modules

# Output
packages/apps/qualify_results/**/.output
packages/apps/qualify_results/**/.vercel
packages/apps/qualify_results/**/.netlify
packages/apps/qualify_results/**/.wrangler
packages/apps/qualify_results/.svelte-kit
packages/apps/qualify_results/build

# OS
packages/apps/qualify_results/**/.DS_Store
packages/apps/qualify_results/**/Thumbs.db

# Env
packages/apps/qualify_results/**/.env
packages/apps/qualify_results/**/.env.*
!packages/apps/qualify_results/**/.env.example
!packages/apps/qualify_results/**/.env.test

# Vite
packages/apps/qualify_results/**/vite.config.js.timestamp-*
packages/apps/qualify_results/**/vite.config.ts.timestamp-*

# Paraglide
packages/apps/qualify_results/**/src/lib/paraglide

packages/apps/qualify_results/**/*storybook.log

# Sentry Config File
packages/apps/qualify_results/**/.env.sentry-build-plugin

# From packages/apps/qualify_results/project.inlang/.gitignore
packages/apps/qualify_results/project.inlang/**/cache
# From packages/apps/season_parser/.gitignore
packages/apps/season_parser/**/.env
packages/apps/season_parser/**/*.json
packages/apps/season_parser/**/*.sql

# Created by https://www.toptal.com/developers/gitignore/api/go
# Edit at https://www.toptal.com/developers/gitignore?templates=go

### Go ###
# If you prefer the allow list template instead of the deny list, see community template:
# https://github.com/github/gitignore/blob/main/community/Golang/Go.AllowList.gitignore
#
# Binaries for programs and plugins
packages/apps/season_parser/**/*.exe
packages/apps/season_parser/**/*.exe~
packages/apps/season_parser/**/*.dll
packages/apps/season_parser/**/*.so
packages/apps/season_parser/**/*.dylib

# Test binary, built with `go test -c`
packages/apps/season_parser/**/*.test

# Output of the go coverage tool, specifically when used with LiteIDE
packages/apps/season_parser/**/*.out

# Dependency directories (remove the comment below to include it)
# vendor/

# Go workspace file
packages/apps/season_parser/**/go.work

# End of https://www.toptal.com/developers/gitignore/api/go
# From packages/apps/sessions_downloader/.gitignore
packages/apps/sessions_downloader/**/.env
packages/apps/sessions_downloader/**/*.json
packages/apps/sessions_downloader/**/*.sql

# Created by https://www.toptal.com/developers/gitignore/api/go
# Edit at https://www.toptal.com/developers/gitignore?templates=go

### Go ###
# If you prefer the allow list template instead of the deny list, see community template:
# https://github.com/github/gitignore/blob/main/community/Golang/Go.AllowList.gitignore
#
# Binaries for programs and plugins
packages/apps/sessions_downloader/**/*.exe
packages/apps/sessions_downloader/**/*.exe~
packages/apps/sessions_downloader/**/*.dll
packages/apps/sessions_downloader/**/*.so
packages/apps/sessions_downloader/**/*.dylib

# Test binary, built with `go test -c`
packages/apps/sessions_downloader/**/*.test

# Output of the go coverage tool, specifically when used with LiteIDE
packages/apps/sessions_downloader/**/*.out

# Dependency directories (remove the comment below to include it)
# vendor/

# Go workspace file
packages/apps/sessions_downloader/**/go.work

# End of https://www.toptal.com/developers/gitignore/api/go
# From packages/libs/cloudrun_utils/.gitignore
packages/libs/cloudrun_utils/**/.env
packages/libs/cloudrun_utils/**/*.json
packages/libs/cloudrun_utils/**/*.sql

# Created by https://www.toptal.com/developers/gitignore/api/go
# Edit at https://www.toptal.com/developers/gitignore?templates=go

### Go ###
# If you prefer the allow list template instead of the deny list, see community template:
# https://github.com/github/gitignore/blob/main/community/Golang/Go.AllowList.gitignore
#
# Binaries for programs and plugins
packages/libs/cloudrun_utils/**/*.exe
packages/libs/cloudrun_utils/**/*.exe~
packages/libs/cloudrun_utils/**/*.dll
packages/libs/cloudrun_utils/**/*.so
packages/libs/cloudrun_utils/**/*.dylib

# Test binary, built with `go test -c`
packages/libs/cloudrun_utils/**/*.test

# Output of the go coverage tool, specifically when used with LiteIDE
packages/libs/cloudrun_utils/**/*.out

# Dependency directories (remove the comment below to include it)
# vendor/

# Go workspace file
packages/libs/cloudrun_utils/**/go.work

# End of https://www.toptal.com/developers/gitignore/api/go
# From packages/libs/drivers_models/.gitignore
packages/libs/drivers_models/**/.env
packages/libs/drivers_models/**/*.json

# Created by https://www.toptal.com/developers/gitignore/api/go
# Edit at https://www.toptal.com/developers/gitignore?templates=go

### Go ###
# If you prefer the allow list template instead of the deny list, see community template:
# https://github.com/github/gitignore/blob/main/community/Golang/Go.AllowList.gitignore
#
# Binaries for programs and plugins
packages/libs/drivers_models/**/*.exe
packages/libs/drivers_models/**/*.exe~
packages/libs/drivers_models/**/*.dll
packages/libs/drivers_models/**/*.so
packages/libs/drivers_models/**/*.dylib

# Test binary, built with `go test -c`
packages/libs/drivers_models/**/*.test

# Output of the go coverage tool, specifically when used with LiteIDE
packages/libs/drivers_models/**/*.out

# Dependency directories (remove the comment below to include it)
# vendor/

# Go workspace file
packages/libs/drivers_models/**/go.work

# End of https://www.toptal.com/developers/gitignore/api/go
# From packages/libs/events_models/.gitignore
packages/libs/events_models/**/.env
packages/libs/events_models/**/*.json

# Created by https://www.toptal.com/developers/gitignore/api/go
# Edit at https://www.toptal.com/developers/gitignore?templates=go

### Go ###
# If you prefer the allow list template instead of the deny list, see community template:
# https://github.com/github/gitignore/blob/main/community/Golang/Go.AllowList.gitignore
#
# Binaries for programs and plugins
packages/libs/events_models/**/*.exe
packages/libs/events_models/**/*.exe~
packages/libs/events_models/**/*.dll
packages/libs/events_models/**/*.so
packages/libs/events_models/**/*.dylib

# Test binary, built with `go test -c`
packages/libs/events_models/**/*.test

# Output of the go coverage tool, specifically when used with LiteIDE
packages/libs/events_models/**/*.out

# Dependency directories (remove the comment below to include it)
# vendor/

# Go workspace file
packages/libs/events_models/**/go.work

# End of https://www.toptal.com/developers/gitignore/api/go
# From packages/libs/gorm_utils/.gitignore
packages/libs/gorm_utils/**/.env
packages/libs/gorm_utils/**/*.json
packages/libs/gorm_utils/**/*.sql

# Created by https://www.toptal.com/developers/gitignore/api/go
# Edit at https://www.toptal.com/developers/gitignore?templates=go

### Go ###
# If you prefer the allow list template instead of the deny list, see community template:
# https://github.com/github/gitignore/blob/main/community/Golang/Go.AllowList.gitignore
#
# Binaries for programs and plugins
packages/libs/gorm_utils/**/*.exe
packages/libs/gorm_utils/**/*.exe~
packages/libs/gorm_utils/**/*.dll
packages/libs/gorm_utils/**/*.so
packages/libs/gorm_utils/**/*.dylib

# Test binary, built with `go test -c`
packages/libs/gorm_utils/**/*.test

# Output of the go coverage tool, specifically when used with LiteIDE
packages/libs/gorm_utils/**/*.out

# Dependency directories (remove the comment below to include it)
# vendor/

# Go workspace file
packages/libs/gorm_utils/**/go.work

# End of https://www.toptal.com/developers/gitignore/api/go
# From packages/libs/irapi/.gitignore
packages/libs/irapi/**/.env
packages/libs/irapi/**/*.json
packages/libs/irapi/**/*.sql

# Created by https://www.toptal.com/developers/gitignore/api/go
# Edit at https://www.toptal.com/developers/gitignore?templates=go

### Go ###
# If you prefer the allow list template instead of the deny list, see community template:
# https://github.com/github/gitignore/blob/main/community/Golang/Go.AllowList.gitignore
#
# Binaries for programs and plugins
packages/libs/irapi/**/*.exe
packages/libs/irapi/**/*.exe~
packages/libs/irapi/**/*.dll
packages/libs/irapi/**/*.so
packages/libs/irapi/**/*.dylib

# Test binary, built with `go test -c`
packages/libs/irapi/**/*.test

# Output of the go coverage tool, specifically when used with LiteIDE
packages/libs/irapi/**/*.out

# Dependency directories (remove the comment below to include it)
# vendor/

# Go workspace file
packages/libs/irapi/**/go.work

# End of https://www.toptal.com/developers/gitignore/api/go
