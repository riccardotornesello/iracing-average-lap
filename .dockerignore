.git/
**/.env

# From infrastructure/.gitignore
# Created by https://www.toptal.com/developers/gitignore/api/terraform
# Edit at https://www.toptal.com/developers/gitignore?templates=terraform

### Terraform ###
# Local .terraform directories
infrastructure/**/**/.terraform/*

# .tfstate files
infrastructure/**/*.tfstate
infrastructure/**/*.tfstate.*

# Crash log files
infrastructure/**/crash.log
infrastructure/**/crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
infrastructure/**/*.tfvars
infrastructure/**/*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
infrastructure/**/override.tf
infrastructure/**/override.tf.json
infrastructure/**/*_override.tf
infrastructure/**/*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
infrastructure/**/.terraformrc
infrastructure/**/terraform.rc

# End of https://www.toptal.com/developers/gitignore/api/terraform
# From packages/.gitignore
packages/**/.env
packages/**/*.json
packages/**/*.sql

# Created by https://www.toptal.com/developers/gitignore/api/go
# Edit at https://www.toptal.com/developers/gitignore?templates=go

### Go ###
# If you prefer the allow list template instead of the deny list, see community template:
# https://github.com/github/gitignore/blob/main/community/Golang/Go.AllowList.gitignore
#
# Binaries for programs and plugins
packages/**/*.exe
packages/**/*.exe~
packages/**/*.dll
packages/**/*.so
packages/**/*.dylib

# Test binary, built with `go test -c`
packages/**/*.test

# Output of the go coverage tool, specifically when used with LiteIDE
packages/**/*.out

# Dependency directories (remove the comment below to include it)
# vendor/

# Go workspace file
packages/**/go.work

# End of https://www.toptal.com/developers/gitignore/api/go
# From qualify-results/.gitignore
qualify-results/**/node_modules

# Output
qualify-results/**/.output
qualify-results/**/.vercel
qualify-results/**/.netlify
qualify-results/**/.wrangler
qualify-results/.svelte-kit
qualify-results/build

# OS
qualify-results/**/.DS_Store
qualify-results/**/Thumbs.db

# Env
qualify-results/**/.env
qualify-results/**/.env.*
!qualify-results/**/.env.example
!qualify-results/**/.env.test

# Vite
qualify-results/**/vite.config.js.timestamp-*
qualify-results/**/vite.config.ts.timestamp-*

# Paraglide
qualify-results/**/src/lib/paraglide

qualify-results/**/*storybook.log

# From qualify-results/project.inlang/.gitignore
qualify-results/project.inlang/**/cache
